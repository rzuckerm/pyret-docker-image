({"theMap":"{\"version\":3,\"sources\":[\"file:///local/hello_world.arr\"],\"names\":[\"file:///local/hello_world.arr\",\",1,0,0,1,24,24\"],\"mappings\":\"AAACA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAADC,kCAACD;AAAAA;AAADC,wCAACD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAADC,mCAACD;AAAAA;AAADC,qCAACD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAADC,mCAACD;AAAAA;AAADC,uBAACD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAADC,mDAACD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA\",\"file\":\"file:///local/hello_world.arr\"}",
"theModule":"function _d1da77db96f19c5c425d55392fe87b0a6e12f189b9c24f9ab6be80e4dc9cd958__0(R,NAMESPACE,M,$arrays11,$$base12,$$constants13,$error14,$$global15,$lists16,$option17,$sets18) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"file:///local/hello_world.arr\";\nvar D = R.undefined;\nvar L = [[M,1,0,0,1,24,24]];\nvar print1 = R.getModuleField(\"builtin://global\",\"values\",\"print\");\nvar arrays2 = $arrays11;\nvar $base3 = $$base12;\nvar $constants4 = $$constants13;\nvar error5 = $error14;\nvar $global6 = $$global15;\nvar lists7 = $lists16;\nvar option8 = $option17;\nvar sets9 = $sets18;\nvar $toplevel20 = function _d1da77db96f19c5c425d55392fe87b0a6e12f189b9c24f9ab6be80e4dc9cd958__0($$resumer26) {\nvar $step19 = 0;\nvar $elidedFrames25 = 0;\nvar $ans22 = D;\nvar $al23 = L[0];\nif(R.isAR($$resumer26)) {\n$step19 = $$resumer26.step;\n$al23 = $$resumer26.from;\n$ans22 = $$resumer26.ans;\n$elidedFrames25 = $$resumer26.elidedFrames;\n$resumer26 = $$resumer26.args[0];\nanswer33 = $$resumer26.vars[0];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans22 = R.mC();\n}\nwhile(!R.isContinuation($ans22)) {\nswitch($step19) {\ncase 0: $step19 = 1;\n$al23 = L[0];\nif(typeof(print1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al23,print1);\n}\n$ans22 = print1.app((\"Hello, world!\\n\"));\nbreak;\ncase 1: var anf_arg27 = $ans22;\n$step19 = 2;\n$al23 = L[0];\nvar $obj28 = R.builtins;\nvar $field29 = R.gCFL($obj28,\"trace-value\",L[0]);\nif(R.isM($field29)) {\n$ans22 = $field29.full_meth($obj28,L[0],anf_arg27);\n} else {\nif(typeof($field29.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[0],$field29);\n}\n$ans22 = $field29.app(L[0],anf_arg27);\n}\nbreak;\ncase 2: var answer33 = $ans22;\n$step19 = 3;\n$al23 = L[0];\nvar $obj30 = R.builtins;\nvar $field31 = R.gCFL($obj30,\"current-checker\",L[0]);\nif(R.isM($field31)) {\n$ans22 = $field31.full_meth($obj30);\n} else {\nif(typeof($field31.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[0],$field31);\n}\n$ans22 = $field31.app();\n}\nbreak;\ncase 3: var anf_method_obj32 = $ans22;\n$step19 = 4;\n$ans22 = R.maybeMethodCall0(anf_method_obj32,\"results\",L[0]);\nbreak;\ncase 4: var checks34 = $ans22;\n$step19 = 5;\n$ans22 = R.mO({\"answer\":answer33,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"sets\":sets9,\n\"error\":error5,\n\"option\":option8,\n\"lists\":lists7,\n\"arrays\":arrays2,\n\"$constants\":$constants4,\n\"$base\":$base3,\n\"$global\":$global6},\n\"defined-values\":{},\n\"defined-types\":{},\n\"provide-plus-types\":R.mO({\"values\":R.mO({}),\n\"types\":{},\n\"modules\":{}}),\n\"checks\":checks34});\nbreak;\ncase 5: ++R.GAS;\nreturn $ans22;\ndefault: R.ffi.throwSpinnakerError(L[0],$step19);\n}\n}\nif($step19 !== 5) {\n$ans22.stack[R.EXN_STACKHEIGHT++] = R.mAR($al23,$toplevel20,$step19,[],[answer33],$elidedFrames25);\n}\nreturn $ans22;\n};\nreturn R.safeCall($toplevel20,function module_load(moduleVal) {\nR.modules[\"$file:///local/hello_world.arr10\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{},
"datatypes":{},
"aliases":{}},
"requires":[{"import-type":"builtin",
"name":"arrays"},
{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"constants"},
{"import-type":"builtin",
"name":"error"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"option"},
{"import-type":"builtin",
"name":"sets"}]})